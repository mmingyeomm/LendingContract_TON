#include "../imports/stdlib.fc";
#include "opcodes/op-codes.fc"; 

#include "pool/Supply.fc"; 
#include "pool/Borrow.fc";

() execute_op (int my_balance, int msg_value, cell in_msg_full, slice in_msg_body) {
    int op = in_msg_body~load_uint(32);
    int query_id = in_msg_body~load_uint(64);

    if (op == op::supply) {
        user_supply(my_balance, msg_value, in_msg_full, in_msg_body);
        return (); 
    }

    if (op == op::borrow) {
        user_borrow(my_balance,msg_value,in_msg_full,in_msg_body);
        return (); 
    }

    return ();
    throw(0xffff);
}

() recv_internal(int my_balance, int msg_value, cell in_msg_full, slice in_msg_body) impure {
    if (in_msg_body.slice_empty?()) {
        return ();
    }
    
    slice cs = in_msg_full.begin_parse();
    int flags = cs~load_uint(4);
    if (flags & 1) {
        return ();
    }

    execute_op(my_balance, msg_value, in_msg_full, in_msg_body);
    return ();
    
    throw(0xffff);
}

(int) get_supply(slice address) method_id {
    return get_user_supply(address);
}

(cell) get_storage() method_id {
    return get_user_storage();
}
